--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 89 | Scripts: 23 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));



-- StarterGui.ScreenGui.Fanta
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(50, 69, 78);
G2L["2"]["Size"] = UDim2.new(0, 683, 0, 514);
G2L["2"]["Position"] = UDim2.new(0.23326, 0, 0.10695, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[Fanta]];


-- StarterGui.ScreenGui.Fanta.aim
G2L["3"] = Instance.new("TextButton", G2L["2"]);
G2L["3"]["TextSize"] = 14;
G2L["3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(150, 90, 0);
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3"]["Size"] = UDim2.new(0, 113, 0, 67);
G2L["3"]["BackgroundTransparency"] = 0.2;
G2L["3"]["Name"] = [[aim]];
G2L["3"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["Text"] = [[Aim]];
G2L["3"]["Position"] = UDim2.new(0.01533, 0, 0.01499, 0);


-- StarterGui.ScreenGui.Fanta.aim.LocalScript
G2L["4"] = Instance.new("LocalScript", G2L["3"]);



-- StarterGui.ScreenGui.Fanta.visual
G2L["5"] = Instance.new("TextButton", G2L["2"]);
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(150, 90, 0);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["Size"] = UDim2.new(0, 113, 0, 67);
G2L["5"]["BackgroundTransparency"] = 0.25;
G2L["5"]["Name"] = [[visual]];
G2L["5"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Text"] = [[Visuals]];
G2L["5"]["Position"] = UDim2.new(0.01533, 0, 0.17511, 0);


-- StarterGui.ScreenGui.Fanta.visual.LocalScript
G2L["6"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.ScreenGui.Fanta.misc
G2L["7"] = Instance.new("TextButton", G2L["2"]);
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(150, 90, 0);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 113, 0, 67);
G2L["7"]["BackgroundTransparency"] = 0.25;
G2L["7"]["Name"] = [[misc]];
G2L["7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["Text"] = [[Misc]];
G2L["7"]["Position"] = UDim2.new(0.01533, 0, 0.33424, 0);


-- StarterGui.ScreenGui.Fanta.misc.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.ScreenGui.Fanta.hvhTab
G2L["9"] = Instance.new("TextButton", G2L["2"]);
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(150, 90, 0);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9"]["Size"] = UDim2.new(0, 113, 0, 67);
G2L["9"]["BackgroundTransparency"] = 0.25;
G2L["9"]["Name"] = [[hvhTab]];
G2L["9"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["Text"] = [[HvH]];
G2L["9"]["Position"] = UDim2.new(0.01533, 0, 0.49338, 0);


-- StarterGui.ScreenGui.Fanta.hvhTab.LocalScript
G2L["a"] = Instance.new("LocalScript", G2L["9"]);



-- StarterGui.ScreenGui.Fanta.UIStroke
G2L["b"] = Instance.new("UIStroke", G2L["2"]);
G2L["b"]["Thickness"] = 0.6;
G2L["b"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.Frame
G2L["c"] = Instance.new("Frame", G2L["2"]);
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["Size"] = UDim2.new(0, 544, 0, 494);
G2L["c"]["Position"] = UDim2.new(0.19473, 0, 0.01362, 0);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.Frame.UIStroke
G2L["d"] = Instance.new("UIStroke", G2L["c"]);
G2L["d"]["Thickness"] = 0.6;
G2L["d"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.discord
G2L["e"] = Instance.new("TextLabel", G2L["2"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["TextSize"] = 14;
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Size"] = UDim2.new(0, 57, 0, 12);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[https://discord.gg/wy3BuyPWwx]];
G2L["e"]["Name"] = [[discord]];
G2L["e"]["Position"] = UDim2.new(0.09678, 0, 0.97627, 0);


-- StarterGui.ScreenGui.Fanta.LocalScript
G2L["f"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.ScreenGui.Fanta.LocalScript
G2L["10"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.ScreenGui.Fanta.visTab
G2L["11"] = Instance.new("Frame", G2L["2"]);
G2L["11"]["Visible"] = false;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Size"] = UDim2.new(0, 526, 0, 464);
G2L["11"]["Position"] = UDim2.new(0.2094, 0, 0.04612, 0);
G2L["11"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Name"] = [[visTab]];
G2L["11"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.visTab.UIStroke
G2L["12"] = Instance.new("UIStroke", G2L["11"]);
G2L["12"]["Thickness"] = 0.6;
G2L["12"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.visTab.box
G2L["13"] = Instance.new("TextButton", G2L["11"]);
G2L["13"]["TextSize"] = 14;
G2L["13"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["13"]["Name"] = [[box]];
G2L["13"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["Text"] = [[]];
G2L["13"]["Position"] = UDim2.new(0.06104, 0, 0.01935, 0);


-- StarterGui.ScreenGui.Fanta.visTab.box.LocalScript
G2L["14"] = Instance.new("LocalScript", G2L["13"]);



-- StarterGui.ScreenGui.Fanta.visTab.box.TextLabel
G2L["15"] = Instance.new("TextLabel", G2L["13"]);
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["TextSize"] = 14;
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["BackgroundTransparency"] = 1;
G2L["15"]["Size"] = UDim2.new(0, 100, 0, 50);
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[Enable]];
G2L["15"]["Position"] = UDim2.new(-0.4245, 0, -0.91368, 0);


-- StarterGui.ScreenGui.Fanta.visTab.chams
G2L["16"] = Instance.new("TextButton", G2L["11"]);
G2L["16"]["TextSize"] = 14;
G2L["16"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["16"]["Name"] = [[chams]];
G2L["16"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["Text"] = [[]];
G2L["16"]["Position"] = UDim2.new(0.06104, 0, 0.10836, 0);


-- StarterGui.ScreenGui.Fanta.visTab.chams.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.ScreenGui.Fanta.visTab.chams.TextLabel
G2L["18"] = Instance.new("TextLabel", G2L["16"]);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["TextSize"] = 14;
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["BackgroundTransparency"] = 1;
G2L["18"]["Size"] = UDim2.new(0, 45, 0, 30);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[Chams]];
G2L["18"]["Position"] = UDim2.new(1.13716, 0, -0.34298, 0);


-- StarterGui.ScreenGui.Fanta.visTab.chams.R
G2L["19"] = Instance.new("Frame", G2L["16"]);
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["19"]["Size"] = UDim2.new(0, 100, 0, 16);
G2L["19"]["Position"] = UDim2.new(0, 0, 2.27778, 0);
G2L["19"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["Name"] = [[R]];


-- StarterGui.ScreenGui.Fanta.visTab.chams.R.sliderKnob
G2L["1a"] = Instance.new("Frame", G2L["19"]);
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(159, 102, 6);
G2L["1a"]["Size"] = UDim2.new(0, 8, 0, 16);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Name"] = [[sliderKnob]];


-- StarterGui.ScreenGui.Fanta.visTab.chams.G
G2L["1b"] = Instance.new("Frame", G2L["16"]);
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["1b"]["Size"] = UDim2.new(0, 100, 0, 16);
G2L["1b"]["Position"] = UDim2.new(0, 0, 4.5, 0);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["Name"] = [[G]];


-- StarterGui.ScreenGui.Fanta.visTab.chams.G.sliderKnob
G2L["1c"] = Instance.new("Frame", G2L["1b"]);
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(159, 102, 6);
G2L["1c"]["Size"] = UDim2.new(0, 8, 0, 16);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Name"] = [[sliderKnob]];


-- StarterGui.ScreenGui.Fanta.visTab.chams.B
G2L["1d"] = Instance.new("Frame", G2L["16"]);
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["1d"]["Size"] = UDim2.new(0, 100, 0, 16);
G2L["1d"]["Position"] = UDim2.new(0, 0, 6.83333, 0);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["Name"] = [[B]];


-- StarterGui.ScreenGui.Fanta.visTab.chams.B.sliderKnob
G2L["1e"] = Instance.new("Frame", G2L["1d"]);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(159, 102, 6);
G2L["1e"]["Size"] = UDim2.new(0, 8, 0, 16);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Name"] = [[sliderKnob]];


-- StarterGui.ScreenGui.Fanta.visTab.health
G2L["1f"] = Instance.new("TextButton", G2L["11"]);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["1f"]["Name"] = [[health]];
G2L["1f"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["Text"] = [[]];
G2L["1f"]["Position"] = UDim2.new(0.06064, 0, 0.4627, 0);


-- StarterGui.ScreenGui.Fanta.visTab.health.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);



-- StarterGui.ScreenGui.Fanta.visTab.health.TextLabel
G2L["21"] = Instance.new("TextLabel", G2L["1f"]);
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["TextSize"] = 14;
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["BackgroundTransparency"] = 1;
G2L["21"]["Size"] = UDim2.new(0, 72, 0, 30);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[Health bar]];
G2L["21"]["Position"] = UDim2.new(0.99295, 0, -0.35767, 0);


-- StarterGui.ScreenGui.Fanta.visTab.name
G2L["22"] = Instance.new("TextButton", G2L["11"]);
G2L["22"]["TextSize"] = 14;
G2L["22"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["22"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["22"]["Name"] = [[name]];
G2L["22"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["22"]["Text"] = [[]];
G2L["22"]["Position"] = UDim2.new(0.06104, 0, 0.54815, 0);


-- StarterGui.ScreenGui.Fanta.visTab.name.LocalScript
G2L["23"] = Instance.new("LocalScript", G2L["22"]);



-- StarterGui.ScreenGui.Fanta.visTab.name.TextLabel
G2L["24"] = Instance.new("TextLabel", G2L["22"]);
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["TextSize"] = 14;
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["BackgroundTransparency"] = 1;
G2L["24"]["Size"] = UDim2.new(0, 72, 0, 30);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[Name ESP]];
G2L["24"]["Position"] = UDim2.new(0.99295, 0, -0.35583, 0);


-- StarterGui.ScreenGui.Fanta.topbar
G2L["25"] = Instance.new("Frame", G2L["2"]);
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(173, 109, 6);
G2L["25"]["Size"] = UDim2.new(0, 683, 0, 23);
G2L["25"]["Position"] = UDim2.new(0, 0, -0.0461, 0);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Name"] = [[topbar]];


-- StarterGui.ScreenGui.Fanta.topbar.UIStroke
G2L["26"] = Instance.new("UIStroke", G2L["25"]);
G2L["26"]["Thickness"] = 0.6;
G2L["26"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.topbar.TextLabel
G2L["27"] = Instance.new("TextLabel", G2L["25"]);
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["TextSize"] = 14;
G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[Fanta.Crim]];
G2L["27"]["Position"] = UDim2.new(0.35222, 0, -0.61476, 0);


-- StarterGui.ScreenGui.Fanta.topbar.Frame
G2L["28"] = Instance.new("Frame", G2L["25"]);
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(198, 125, 6);
G2L["28"]["Size"] = UDim2.new(0, 17, 0, 16);
G2L["28"]["Position"] = UDim2.new(0.96486, 0, 0.14689, 0);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Fanta.topbar.Frame.UICorner
G2L["29"] = Instance.new("UICorner", G2L["28"]);



-- StarterGui.ScreenGui.Fanta.topbar.LocalScript
G2L["2a"] = Instance.new("LocalScript", G2L["25"]);



-- StarterGui.ScreenGui.Fanta.settingsTab
G2L["2b"] = Instance.new("Frame", G2L["2"]);
G2L["2b"]["Visible"] = false;
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b"]["Size"] = UDim2.new(0, 526, 0, 464);
G2L["2b"]["Position"] = UDim2.new(0.209, 0, 0.046, 0);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Name"] = [[settingsTab]];
G2L["2b"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.settingsTab.UIStroke
G2L["2c"] = Instance.new("UIStroke", G2L["2b"]);
G2L["2c"]["Thickness"] = 0.6;
G2L["2c"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.settingsTab.fakelag
G2L["2d"] = Instance.new("TextButton", G2L["2b"]);
G2L["2d"]["TextSize"] = 14;
G2L["2d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["2d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2d"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["2d"]["Name"] = [[fakelag]];
G2L["2d"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d"]["Text"] = [[]];
G2L["2d"]["Position"] = UDim2.new(0.09356, 0, 0.02629, 0);


-- StarterGui.ScreenGui.Fanta.settingsTab.fakelag.TextLabel
G2L["2e"] = Instance.new("TextLabel", G2L["2d"]);
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["BackgroundTransparency"] = 1;
G2L["2e"]["Size"] = UDim2.new(0, 73, 0, 33);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[Fakelag]];
G2L["2e"]["Position"] = UDim2.new(0.47059, 0, -0.45711, 0);


-- StarterGui.ScreenGui.Fanta.settingsTab.fakelag.LocalScript
G2L["2f"] = Instance.new("LocalScript", G2L["2d"]);



-- StarterGui.ScreenGui.Fanta.misTab
G2L["30"] = Instance.new("Frame", G2L["2"]);
G2L["30"]["Visible"] = false;
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(52, 68, 110);
G2L["30"]["Size"] = UDim2.new(0, 526, 0, 464);
G2L["30"]["Position"] = UDim2.new(0.209, 0, 0.046, 0);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Name"] = [[misTab]];
G2L["30"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.misTab.UIStroke
G2L["31"] = Instance.new("UIStroke", G2L["30"]);
G2L["31"]["Thickness"] = 0.6;
G2L["31"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.misTab.fov
G2L["32"] = Instance.new("TextButton", G2L["30"]);
G2L["32"]["TextSize"] = 14;
G2L["32"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["32"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["32"]["Name"] = [[fov]];
G2L["32"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["Text"] = [[]];
G2L["32"]["Position"] = UDim2.new(0.09356, 0, 0.02629, 0);


-- StarterGui.ScreenGui.Fanta.misTab.fov.slider
G2L["33"] = Instance.new("Frame", G2L["32"]);
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["33"]["Size"] = UDim2.new(0, 190, 0, 13);
G2L["33"]["Position"] = UDim2.new(-0.29412, 0, 2.0088, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Name"] = [[slider]];


-- StarterGui.ScreenGui.Fanta.misTab.fov.slider.UIStroke
G2L["34"] = Instance.new("UIStroke", G2L["33"]);
G2L["34"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.misTab.fov.slider.sliderKnob
G2L["35"] = Instance.new("Frame", G2L["33"]);
G2L["35"]["BorderSizePixel"] = 0;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(159, 102, 6);
G2L["35"]["Size"] = UDim2.new(0, 15, 0, 13);
G2L["35"]["Position"] = UDim2.new(0.57415, 0, 0, 0);
G2L["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35"]["Name"] = [[sliderKnob]];


-- StarterGui.ScreenGui.Fanta.misTab.fov.slider.sliderKnob.sliderValue
G2L["36"] = Instance.new("TextLabel", G2L["35"]);
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["TextSize"] = 14;
G2L["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["BackgroundTransparency"] = 1;
G2L["36"]["Size"] = UDim2.new(0, 28, 0, 24);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Text"] = [[70]];
G2L["36"]["Name"] = [[sliderValue]];
G2L["36"]["Position"] = UDim2.new(-0.46667, 0, -1.46154, 0);


-- StarterGui.ScreenGui.Fanta.misTab.fov.LocalScript
G2L["37"] = Instance.new("LocalScript", G2L["32"]);



-- StarterGui.ScreenGui.Fanta.misTab.fov.TextLabel
G2L["38"] = Instance.new("TextLabel", G2L["32"]);
G2L["38"]["BorderSizePixel"] = 0;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["TextSize"] = 14;
G2L["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["BackgroundTransparency"] = 1;
G2L["38"]["Size"] = UDim2.new(0, 73, 0, 33);
G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["Text"] = [[Override FOV]];
G2L["38"]["Position"] = UDim2.new(1.82353, 0, -0.45711, 0);


-- StarterGui.ScreenGui.Fanta.misTab.noclip
G2L["39"] = Instance.new("TextButton", G2L["30"]);
G2L["39"]["TextSize"] = 14;
G2L["39"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["39"]["Name"] = [[noclip]];
G2L["39"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["Text"] = [[]];
G2L["39"]["Position"] = UDim2.new(0.09356, 0, 0.27943, 0);


-- StarterGui.ScreenGui.Fanta.misTab.noclip.TextLabel
G2L["3a"] = Instance.new("TextLabel", G2L["39"]);
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["TextSize"] = 14;
G2L["3a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["BackgroundTransparency"] = 1;
G2L["3a"]["Size"] = UDim2.new(0, 73, 0, 33);
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Text"] = [[Noclip]];
G2L["3a"]["Position"] = UDim2.new(0.58824, 0, -0.45711, 0);


-- StarterGui.ScreenGui.Fanta.misTab.noclip.LocalScript
G2L["3b"] = Instance.new("LocalScript", G2L["39"]);



-- StarterGui.ScreenGui.Fanta.misTab.rpg
G2L["3c"] = Instance.new("TextButton", G2L["30"]);
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3c"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["3c"]["Name"] = [[rpg]];
G2L["3c"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["Text"] = [[]];
G2L["3c"]["Position"] = UDim2.new(0.09356, 0, 0.37142, 0);


-- StarterGui.ScreenGui.Fanta.misTab.rpg.TextLabel
G2L["3d"] = Instance.new("TextLabel", G2L["3c"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["TextSize"] = 14;
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["BackgroundTransparency"] = 1;
G2L["3d"]["Size"] = UDim2.new(0, 73, 0, 33);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[RPG Control]];
G2L["3d"]["Position"] = UDim2.new(1.41176, 0, -0.45711, 0);


-- StarterGui.ScreenGui.Fanta.misTab.rpg.LocalScript
G2L["3e"] = Instance.new("LocalScript", G2L["3c"]);



-- StarterGui.ScreenGui.Fanta.misTab.admin
G2L["3f"] = Instance.new("TextButton", G2L["30"]);
G2L["3f"]["TextSize"] = 14;
G2L["3f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3f"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["3f"]["Name"] = [[admin]];
G2L["3f"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["Text"] = [[]];
G2L["3f"]["Position"] = UDim2.new(0.09356, 0, 0.19414, 0);


-- StarterGui.ScreenGui.Fanta.misTab.admin.LocalScript
G2L["40"] = Instance.new("LocalScript", G2L["3f"]);



-- StarterGui.ScreenGui.Fanta.misTab.admin.TextLabel
G2L["41"] = Instance.new("TextLabel", G2L["3f"]);
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["TextSize"] = 14;
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["BackgroundTransparency"] = 1;
G2L["41"]["Size"] = UDim2.new(0, 73, 0, 33);
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Text"] = [[Admin Protection]];
G2L["41"]["Position"] = UDim2.new(2.35294, 0, -0.45711, 0);


-- StarterGui.ScreenGui.Fanta.misTab.ScrollingFrame
G2L["42"] = Instance.new("ScrollingFrame", G2L["30"]);
G2L["42"]["Visible"] = false;
G2L["42"]["Active"] = true;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(41, 54, 87);
G2L["42"]["Size"] = UDim2.new(0, 139, 0, 241);
G2L["42"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Position"] = UDim2.new(0.66359, 0, 0.02479, 0);
G2L["42"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.misTab.ScrollingFrame.UIListLayout
G2L["43"] = Instance.new("UIListLayout", G2L["42"]);
G2L["43"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.ScreenGui.Fanta.misTab.ScrollingFrame.LocalScript
G2L["44"] = Instance.new("LocalScript", G2L["42"]);



-- StarterGui.ScreenGui.Fanta.misTab.saveCFG
G2L["45"] = Instance.new("TextButton", G2L["30"]);
G2L["45"]["TextSize"] = 14;
G2L["45"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["BackgroundColor3"] = Color3.fromRGB(22, 118, 0);
G2L["45"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["45"]["Size"] = UDim2.new(0, 82, 0, 20);
G2L["45"]["Name"] = [[saveCFG]];
G2L["45"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["Text"] = [[save]];
G2L["45"]["Visible"] = false;
G2L["45"]["Position"] = UDim2.new(0.72811, 0, 0.77961, 0);


-- StarterGui.ScreenGui.Fanta.misTab.saveCFG.LocalScript
G2L["46"] = Instance.new("LocalScript", G2L["45"]);



-- StarterGui.ScreenGui.Fanta.misTab.loadCFG
G2L["47"] = Instance.new("TextButton", G2L["30"]);
G2L["47"]["TextSize"] = 14;
G2L["47"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(22, 118, 0);
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["Size"] = UDim2.new(0, 82, 0, 20);
G2L["47"]["Name"] = [[loadCFG]];
G2L["47"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["Text"] = [[load]];
G2L["47"]["Visible"] = false;
G2L["47"]["Position"] = UDim2.new(0.72811, 0, 0.89532, 0);


-- StarterGui.ScreenGui.Fanta.misTab.loadCFG.LocalScript
G2L["48"] = Instance.new("LocalScript", G2L["47"]);



-- StarterGui.ScreenGui.Fanta.misTab.nameCFG
G2L["49"] = Instance.new("TextBox", G2L["30"]);
G2L["49"]["Visible"] = false;
G2L["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["TextSize"] = 14;
G2L["49"]["Name"] = [[nameCFG]];
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(22, 118, 0);
G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["49"]["Size"] = UDim2.new(0, 139, 0, 21);
G2L["49"]["Position"] = UDim2.new(0.66359, 0, 0.70523, 0);
G2L["49"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["Text"] = [[]];


-- StarterGui.ScreenGui.Fanta.misTab.nameCFG.LocalScript
G2L["4a"] = Instance.new("LocalScript", G2L["49"]);



-- StarterGui.ScreenGui.Fanta.aimTab
G2L["4b"] = Instance.new("Frame", G2L["2"]);
G2L["4b"]["Visible"] = false;
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["Size"] = UDim2.new(0, 526, 0, 464);
G2L["4b"]["Position"] = UDim2.new(0.209, 0, 0.046, 0);
G2L["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b"]["Name"] = [[aimTab]];
G2L["4b"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.aimTab.UIStroke
G2L["4c"] = Instance.new("UIStroke", G2L["4b"]);
G2L["4c"]["Thickness"] = 0.6;
G2L["4c"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot
G2L["4d"] = Instance.new("TextButton", G2L["4b"]);
G2L["4d"]["TextSize"] = 14;
G2L["4d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["4d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4d"]["Size"] = UDim2.new(0, 17, 0, 18);
G2L["4d"]["Name"] = [[aimbot]];
G2L["4d"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["Text"] = [[]];
G2L["4d"]["Position"] = UDim2.new(0.06104, 0, 0.01935, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.LocalScript
G2L["4e"] = Instance.new("LocalScript", G2L["4d"]);



-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.dropdownButton
G2L["4f"] = Instance.new("TextButton", G2L["4d"]);
G2L["4f"]["TextSize"] = 14;
G2L["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f"]["Size"] = UDim2.new(0, 126, 0, 14);
G2L["4f"]["Name"] = [[dropdownButton]];
G2L["4f"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["Text"] = [[-]];
G2L["4f"]["Position"] = UDim2.new(0, 0, 2.55413, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.dropdownButton.dropdownMenu
G2L["50"] = Instance.new("Frame", G2L["4f"]);
G2L["50"]["Visible"] = false;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["50"]["Size"] = UDim2.new(0, 126, 0, 41);
G2L["50"]["Position"] = UDim2.new(0, 0, 1, 0);
G2L["50"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["Name"] = [[dropdownMenu]];


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.dropdownButton.dropdownMenu.HeadButton
G2L["51"] = Instance.new("TextButton", G2L["50"]);
G2L["51"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
G2L["51"]["TextSize"] = 14;
G2L["51"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["51"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["51"]["Size"] = UDim2.new(0, 126, 0, 22);
G2L["51"]["Name"] = [[HeadButton]];
G2L["51"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["Text"] = [[Head]];


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.dropdownButton.dropdownMenu.BodyButton
G2L["52"] = Instance.new("TextButton", G2L["50"]);
G2L["52"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
G2L["52"]["TextSize"] = 14;
G2L["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["BackgroundColor3"] = Color3.fromRGB(5, 61, 43);
G2L["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["52"]["Size"] = UDim2.new(0, 126, 0, 22);
G2L["52"]["Name"] = [[BodyButton]];
G2L["52"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["Text"] = [[Body]];
G2L["52"]["Position"] = UDim2.new(0, 0, 0.46341, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.TextLabel
G2L["53"] = Instance.new("TextLabel", G2L["4d"]);
G2L["53"]["BorderSizePixel"] = 0;
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["53"]["TextSize"] = 14;
G2L["53"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["53"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["53"]["BackgroundTransparency"] = 1;
G2L["53"]["Size"] = UDim2.new(0, 33, 0, 33);
G2L["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53"]["Text"] = [[Aimbot]];
G2L["53"]["Position"] = UDim2.new(1.7784, 0, -0.44713, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.TextLabel
G2L["54"] = Instance.new("TextLabel", G2L["4d"]);
G2L["54"]["BorderSizePixel"] = 0;
G2L["54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["54"]["TextSize"] = 14;
G2L["54"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["54"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["54"]["BackgroundTransparency"] = 1;
G2L["54"]["Size"] = UDim2.new(0, 33, 0, 33);
G2L["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["54"]["Text"] = [[Body part]];
G2L["54"]["Position"] = UDim2.new(2.69531, 0, 0.95783, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.FOVCircle
G2L["55"] = Instance.new("Frame", G2L["4b"]);
G2L["55"]["BorderSizePixel"] = 0;
G2L["55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["55"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["55"]["Position"] = UDim2.new(1.20276, 0, 0.17355, 0);
G2L["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["55"]["Name"] = [[FOVCircle]];
G2L["55"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Fanta.aimTab.FOVCircle.UICorner
G2L["56"] = Instance.new("UICorner", G2L["55"]);
G2L["56"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.ScreenGui.Fanta.aimTab.FOVCircle.UIStroke
G2L["57"] = Instance.new("UIStroke", G2L["55"]);
G2L["57"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.ScreenGui.LocalScript
G2L["58"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.ScreenGui.LocalScript
G2L["59"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.ScreenGui.Fanta.aim.LocalScript
local function C_4()
local script = G2L["4"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.aimTab.Visible = true
		script.Parent.Parent.visTab.Visible = false
		script.Parent.Parent.misTab.Visible = false
		script.Parent.Parent.settingsTab.Visible = false
		wait(0.1)
	end)
	
	
end;
task.spawn(C_4);
-- StarterGui.ScreenGui.Fanta.visual.LocalScript
local function C_6()
local script = G2L["6"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.aimTab.Visible = false
		script.Parent.Parent.visTab.Visible = true
		script.Parent.Parent.misTab.Visible = false
		script.Parent.Parent.settingsTab.Visible = false
		wait(0.1)
	end)
	
	
end;
task.spawn(C_6);
-- StarterGui.ScreenGui.Fanta.misc.LocalScript
local function C_8()
local script = G2L["8"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.aimTab.Visible = false
		script.Parent.Parent.visTab.Visible = false
		script.Parent.Parent.misTab.Visible = true
		script.Parent.Parent.settingsTab.Visible = false
		wait(0.1)
	end)
	
	
end;
task.spawn(C_8);
-- StarterGui.ScreenGui.Fanta.hvhTab.LocalScript
local function C_a()
local script = G2L["a"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.aimTab.Visible = false
		script.Parent.Parent.visTab.Visible = false
		script.Parent.Parent.misTab.Visible = false
		script.Parent.Parent.settingsTab.Visible = true
		wait(0.1)
	end)
	
	
end;
task.spawn(C_a);
-- StarterGui.ScreenGui.Fanta.LocalScript
local function C_f()
local script = G2L["f"];
	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://6911756259"
	sound.Volume = 0.4 
	sound.Looped = false
	sound.Parent = game:GetService("SoundService")
	sound:Play()
	
end;
task.spawn(C_f);
-- StarterGui.ScreenGui.Fanta.LocalScript
local function C_10()
local script = G2L["10"];
	local UIS = game:GetService("UserInputService")
	local menu = script.Parent -- Assuming this script is inside your menu frame
	local isMenuOpen = false -- Track menu state
	
	local function ToggleMenu()
		isMenuOpen = not isMenuOpen
	
		if isMenuOpen then
			UIS.MouseBehavior = Enum.MouseBehavior.Default -- Unlock mouse
			menu.Visible = true -- Show menu
		else
			UIS.MouseBehavior = Enum.MouseBehavior.LockCenter -- Lock mouse back
			menu.Visible = false -- Hide menu
		end
	end
	
	-- Bind to a key (like Insert) to toggle menu
	UIS.InputBegan:Connect(function(input, processed)
		if not processed and input.KeyCode == Enum.KeyCode.Insert then
			ToggleMenu()
		end
	end)
	
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.Fanta.visTab.box.LocalScript
local function C_14()
local script = G2L["14"];
	local Settings = {
		Box_Color = Color3.fromRGB(255, 255, 255), -- Box Color (Red)
		Box_Thickness = 1.5
	}
	
	local player = game:GetService("Players").LocalPlayer
	local camera = game:GetService("Workspace").CurrentCamera
	local runService = game:GetService("RunService")
	local players = game:GetService("Players")
	
	local espEnabled = false
	local boxes = {} -- Store ESP boxes
	local connections = {} -- Store update loops
	
	local function NewSquare(thickness, color)
		local square = Drawing.new("Square")
		square.Visible = false
		square.Thickness = thickness
		square.Color = color
		square.Filled = false
		return square
	end
	
	local function DrawBoxESP(plr)
		if boxes[plr] then return end -- Prevent duplicates
	
		local box = NewSquare(Settings.Box_Thickness, Settings.Box_Color)
		boxes[plr] = box
	
		connections[plr] = runService.RenderStepped:Connect(function()
			if not espEnabled or not plr.Character then
				box.Visible = false
				return
			end
	
			local char = plr.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			local head = char:FindFirstChild("Head")
	
			if root and head then
				local rootPos, onScreen = camera:WorldToViewportPoint(root.Position)
				local headPos = camera:WorldToViewportPoint(head.Position)
				local footPos = camera:WorldToViewportPoint(root.Position - Vector3.new(0, 3, 0))
	
				if onScreen then
					local height = math.abs(headPos.Y - footPos.Y)
					local width = height / 2.2
	
					box.Size = Vector2.new(width, height)
					box.Position = Vector2.new(rootPos.X - width / 2, rootPos.Y - height / 2)
					box.Visible = true
				else
					box.Visible = false
				end
			else
				box.Visible = false
			end
		end)
	end
	
	local function CleanupESP(plr)
		if boxes[plr] then
			boxes[plr]:Remove()
			boxes[plr] = nil
		end
		if connections[plr] then
			connections[plr]:Disconnect()
			connections[plr] = nil
		end
	end
	
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		espEnabled = not espEnabled
		button.BackgroundColor3 = espEnabled and Color3.fromRGB(255, 117, 0) or Color3.fromRGB(21, 117, 0)
	
		for _, plr in ipairs(players:GetPlayers()) do
			if plr ~= player then
				if espEnabled then
					DrawBoxESP(plr)
				else
					CleanupESP(plr)
				end
			end
		end
	end)
	
	for _, plr in ipairs(players:GetPlayers()) do
		if plr ~= player then
			DrawBoxESP(plr)
		end
	end
	
	players.PlayerRemoving:Connect(CleanupESP)
	
end;
task.spawn(C_14);
-- StarterGui.ScreenGui.Fanta.visTab.chams.LocalScript
local function C_17()
local script = G2L["17"];
	local chamsButton = script.Parent -- The "chams" button
	local RSlider = chamsButton:FindFirstChild("R")
	local GSlider = chamsButton:FindFirstChild("G")
	local BSlider = chamsButton:FindFirstChild("B")
	
	local RKnob = RSlider:FindFirstChild("sliderKnob")
	local GKnob = GSlider:FindFirstChild("sliderKnob")
	local BKnob = BSlider:FindFirstChild("sliderKnob")
	
	local userInputService = game:GetService("UserInputService")
	local runService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local lp = Players.LocalPlayer
	local CoreGui = game:GetService("CoreGui")
	
	local draggingKnob = nil -- Track which knob is being dragged
	
	local RValue, GValue, BValue = 255, 255, 255 -- Default to white
	local highlightEnabled = false
	local Storage = Instance.new("Folder")
	Storage.Parent = CoreGui
	Storage.Name = "Highlight_Storage"
	
	-- Returns the slider's value from 0 to 255 based on knob position
	local function GetSliderValue(knob)
		local position = knob.Position.X.Scale
		return math.floor((position / 0.92) * 255)
	end
	
	local function UpdateValues()
		RValue = GetSliderValue(RKnob)
		GValue = GetSliderValue(GKnob)
		BValue = GetSliderValue(BKnob)
	end
	
	-- Update the highlight color for all highlights in Storage
	local function UpdateAllHighlightColors()
		local fillColor = Color3.fromRGB(RValue, GValue, BValue)
		for _, highlight in ipairs(Storage:GetChildren()) do
			highlight.FillColor = fillColor
		end
	end
	
	-- Applies a highlight to a player's current character
	local function ApplyHighlight(plr)
		if not highlightEnabled or plr == lp then return end
		local character = plr.Character
		if character then
			local highlight = Storage:FindFirstChild(plr.Name)
			if not highlight then
				highlight = Instance.new("Highlight")
				highlight.Name = plr.Name
				highlight.Parent = Storage
				highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
				highlight.FillTransparency = 0
				highlight.OutlineTransparency = 1
			end
			highlight.Adornee = character
			highlight.FillColor = Color3.fromRGB(RValue, GValue, BValue)
		end
	end
	
	-- Removes a player's highlight
	local function RemoveHighlight(plr)
		local highlight = Storage:FindFirstChild(plr.Name)
		if highlight then
			highlight:Destroy()
		end
	end
	
	-- Setup a player by applying the highlight (if character exists) and
	-- listening for respawns to reapply the highlight.
	local function SetupPlayer(plr)
		if plr.Character then
			ApplyHighlight(plr)
		end
		plr.CharacterAdded:Connect(function(character)
			if highlightEnabled then
				-- Small delay to ensure the character loads fully
				wait(0.1)
				ApplyHighlight(plr)
			end
		end)
	end
	
	-- Slider dragging logic
	local function SetupSlider(sliderKnob, slider)
		sliderKnob.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				draggingKnob = sliderKnob
			end
		end)
	
		userInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				draggingKnob = nil
			end
		end)
	
		userInputService.InputChanged:Connect(function(input)
			if draggingKnob == sliderKnob and input.UserInputType == Enum.UserInputType.MouseMovement then
				local mousePos = input.Position.X
				local sliderPos = slider.AbsolutePosition.X
				local sliderWidth = slider.AbsoluteSize.X
				-- Clamp the position so the knob doesn't move too far
				local relativePos = math.clamp(mousePos - sliderPos, 0, sliderWidth * 0.92)
				sliderKnob.Position = UDim2.new(relativePos / sliderWidth, 0, 0, 0)
				UpdateValues()
				UpdateAllHighlightColors()
			end
		end)
	end
	
	-- Apply slider logic to each slider
	SetupSlider(RKnob, RSlider)
	SetupSlider(GKnob, GSlider)
	SetupSlider(BKnob, BSlider)
	
	-- Toggle chams on/off when the button is clicked
	chamsButton.MouseButton1Click:Connect(function()
		highlightEnabled = not highlightEnabled
	
		if highlightEnabled then
			chamsButton.BackgroundColor3 = Color3.fromRGB(158, 101, 5) -- Active state
			-- Set up existing players (except self)
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr ~= lp then
					SetupPlayer(plr)
				end
			end
		else
			chamsButton.BackgroundColor3 = Color3.fromRGB(4, 60, 42) -- Inactive state
			-- Remove all existing highlights
			for _, highlight in ipairs(Storage:GetChildren()) do
				highlight:Destroy()
			end
		end
	end)
	
	-- When new players join, set them up if chams are enabled
	Players.PlayerAdded:Connect(function(plr)
		if highlightEnabled then
			SetupPlayer(plr)
		end
	end)
	
	-- When players leave, remove their highlight
	Players.PlayerRemoving:Connect(function(plr)
		RemoveHighlight(plr)
	end)
	
end;
task.spawn(C_17);
-- StarterGui.ScreenGui.Fanta.visTab.health.LocalScript
local function C_20()
local script = G2L["20"];
	local Settings = {
		HealthBar_Color = Color3.fromRGB(100, 255, 50), -- Health Bar Color (Green)
		HealthBar_Thickness = 1.5
	}
	
	local player = game:GetService("Players").LocalPlayer
	local camera = game:GetService("Workspace").CurrentCamera
	local runService = game:GetService("RunService")
	local players = game:GetService("Players")
	
	local healthBarEnabled = false
	local healthBars = {} -- Store health bar drawings
	local connections = {}
	
	local function NewLine(thickness, color)
		local line = Drawing.new("Line")
		line.Visible = false
		line.Thickness = thickness
		line.Color = color
		return line
	end
	
	local function DrawHealthBar(plr)
		if healthBars[plr] then return end -- Prevent duplicates
	
		local healthBar = NewLine(Settings.HealthBar_Thickness, Settings.HealthBar_Color)
		healthBars[plr] = healthBar
	
		connections[plr] = runService.RenderStepped:Connect(function()
			if not healthBarEnabled or not plr.Character then
				healthBar.Visible = false
				return
			end
	
			local char = plr.Character
			local root = char:FindFirstChild("HumanoidRootPart")
			local head = char:FindFirstChild("Head")
			local humanoid = char:FindFirstChild("Humanoid")
	
			if root and head and humanoid and humanoid.Health > 0 then
				local rootPos, onScreen = camera:WorldToViewportPoint(root.Position)
				local headPos = camera:WorldToViewportPoint(head.Position)
				local footPos = camera:WorldToViewportPoint(root.Position - Vector3.new(0, 3, 0))
	
				if onScreen then
					local height = math.abs(headPos.Y - footPos.Y)
					local width = height / 2.2
	
					local barX = rootPos.X - width / 2 - 5
					local barTop = rootPos.Y - height / 2
					local barBottom = rootPos.Y + height / 2
					local barHeight = (humanoid.Health / humanoid.MaxHealth) * height
	
					healthBar.From = Vector2.new(barX, barBottom)
					healthBar.To = Vector2.new(barX, barBottom - barHeight)
					healthBar.Color = Color3.fromRGB(255, 0, 0):lerp(Color3.fromRGB(0, 255, 0), humanoid.Health / humanoid.MaxHealth)
					healthBar.Visible = true
				else
					healthBar.Visible = false
				end
			else
				healthBar.Visible = false
			end
		end)
	end
	
	local function CleanupHealthBar(plr)
		if healthBars[plr] then
			healthBars[plr]:Remove()
			healthBars[plr] = nil
		end
		if connections[plr] then
			connections[plr]:Disconnect()
			connections[plr] = nil
		end
	end
	
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		healthBarEnabled = not healthBarEnabled
		button.BackgroundColor3 = healthBarEnabled and Color3.fromRGB(255, 117, 0) or Color3.fromRGB(21, 117, 0)
	
		for _, plr in ipairs(players:GetPlayers()) do
			if plr ~= player then
				if healthBarEnabled then
					DrawHealthBar(plr)
				else
					CleanupHealthBar(plr)
				end
			end
		end
	end)
	
	for _, plr in ipairs(players:GetPlayers()) do
		if plr ~= player then
			DrawHealthBar(plr)
		end
	end
	
	players.PlayerRemoving:Connect(CleanupHealthBar)
	
end;
task.spawn(C_20);
-- StarterGui.ScreenGui.Fanta.visTab.name.LocalScript
local function C_23()
local script = G2L["23"];
	local player = game:GetService("Players").LocalPlayer
	local camera = game:GetService("Workspace").CurrentCamera
	local players = game:GetService("Players")
	local runService = game:GetService("RunService")
	local button = script.Parent -- Assuming this script is inside a button
	
	local nameEspEnabled = false -- Toggle state
	local nameEspDrawings = {} -- Table to store drawing objects for removal
	
	-- Function to create name ESP
	local function DrawNameESP(plr)
		if plr == player then return end -- Don't draw ESP for yourself
	
		local nameText = Drawing.new("Text")
		nameText.Visible = false
		nameText.Size = 7
		nameText.Color = Color3.fromRGB(255, 255, 255)
		nameText.Center = true
		nameText.Outline = true
		nameText.OutlineColor = Color3.fromRGB(0, 0, 0)
	
		nameEspDrawings[plr] = nameText
	end
	
	-- Function to remove all ESP
	local function ClearESP()
		for _, drawing in pairs(nameEspDrawings) do
			drawing:Remove()
		end
		nameEspDrawings = {}
	end
	
	-- RenderStepped loop to constantly update ESP positions
	runService.RenderStepped:Connect(function()
		if not nameEspEnabled then return end
	
		for plr, nameText in pairs(nameEspDrawings) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local pos, onScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
				if onScreen then
					nameText.Text = plr.DisplayName
					nameText.Position = Vector2.new(pos.X, pos.Y - 30) -- Position above head
					nameText.Visible = true
				else
					nameText.Visible = false
				end
			else
				nameText.Visible = false
			end
		end
	end)
	
	-- Enable Name ESP for all players
	local function EnableNameESP()
		for _, plr in ipairs(players:GetPlayers()) do
			if not nameEspDrawings[plr] then
				DrawNameESP(plr)
			end
		end
		players.PlayerAdded:Connect(DrawNameESP)
	end
	
	-- Disable Name ESP
	local function DisableNameESP()
		ClearESP()
	end
	
	-- Button click logic for toggling Name ESP
	button.MouseButton1Click:Connect(function()
		nameEspEnabled = not nameEspEnabled
		if nameEspEnabled then
			button.BackgroundColor3 = Color3.fromRGB(158, 101, 5) -- Active state
			EnableNameESP()
		else
			button.BackgroundColor3 = Color3.fromRGB(4, 60, 42) -- Inactive state
			DisableNameESP()
		end
	end)
	
end;
task.spawn(C_23);
-- StarterGui.ScreenGui.Fanta.topbar.LocalScript
local function C_2a()
local script = G2L["2a"];
	local UserInputService = game:GetService("UserInputService")
	
	local topBar = script.Parent
	local fantaMenu = topBar.Parent  -- Fanta
	
	local dragging = false
	local dragOffset = Vector2.new(0, 0)
	local connection -- placeholder for our InputChanged connection
	
	local function stopDragging()
		dragging = false
		if connection then
			connection:Disconnect()
			connection = nil
		end
	end
	
	topBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			local mousePos = Vector2.new(input.Position.X, input.Position.Y)
			dragOffset = mousePos - fantaMenu.AbsolutePosition
	
			-- Now listen for InputChanged globally
			connection = UserInputService.InputChanged:Connect(function(input2)
				if dragging and input2.UserInputType == Enum.UserInputType.MouseMovement then
					local newMousePos = Vector2.new(input2.Position.X, input2.Position.Y)
					local newPos = newMousePos - dragOffset
					fantaMenu.Position = UDim2.new(0, newPos.X, 0, newPos.Y)
				end
			end)
		end
	end)
	
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			stopDragging()
		end
	end)
	
end;
task.spawn(C_2a);
-- StarterGui.ScreenGui.Fanta.settingsTab.fakelag.LocalScript
local function C_2f()
local script = G2L["2f"];
	-- Variables
	workspace[game.Players.LocalPlayer.Name].Archivable = true
	local originalChar = game.Players.LocalPlayer.Character
	local root = originalChar.HumanoidRootPart
	local clonedChar = nil
	local follow = false
	local fakeLagEnabled = false -- Toggle state
	local button = script.Parent -- Your button
	
	-- Colors for the button
	local onColor = Color3.fromRGB(158,101,5,255)
	local offColor = Color3.fromRGB(4,60,42,255)
	
	-- Function to create the fake lag model
	local function createClonedCharacter()
		if clonedChar then
			clonedChar:Destroy() -- Ensure only one clone exists
		end
	
		clonedChar = originalChar:Clone()
		clonedChar.Parent = workspace
		workspace.CurrentCamera.CameraSubject = clonedChar.Humanoid
	
		-- Apply visual effect to the lagging model
		for _, v in pairs(clonedChar:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Material = Enum.Material.Neon
				v.Color = Color3.fromRGB(255, 0, 0) -- Lagging model is red
				v.Transparency = 0.7
				v.CanCollide = false -- Disable collisions
			end
		end
	
		-- Sync cloned character's movements
		game:GetService("RunService").Heartbeat:Connect(function()
			if clonedChar and fakeLagEnabled then
				clonedChar.Humanoid:Move(originalChar.Humanoid.MoveDirection)
				clonedChar.Humanoid.Jump = originalChar.Humanoid.Jump
			end
		end)
	end
	
	-- Fake lag functionality
	local function toggleFakeLag(state)
		fakeLagEnabled = state
	
		if fakeLagEnabled then
			-- Change button color to "on"
			button.BackgroundColor3 = onColor
	
			-- Create and manage the cloned character
			createClonedCharacter()
	
			-- Start fake lagging
			task.spawn(function()
				while fakeLagEnabled do
					-- Anchor the real character to simulate lag
					root.Anchored = true
					follow = false
					task.wait(math.random(60, 180) / 130) -- Delay to simulate lag (randomized for effect)
	
					-- Update the real character's position
					root.Anchored = false
					root.CFrame = clonedChar.HumanoidRootPart.CFrame
					follow = true
	
					-- Brief delay before the next lag cycle
					task.wait(0.05)
				end
			end)
		else
			-- Change button color to "off"
			button.BackgroundColor3 = offColor
	
			-- Stop fake lagging
			root.Anchored = false
			follow = true
	
			-- Destroy the fake lag model
			if clonedChar then
				clonedChar:Destroy()
				clonedChar = nil
			end
	
			-- Ensure camera goes back to the real character
			workspace.CurrentCamera.CameraSubject = originalChar.Humanoid
		end
	end
	
	-- Button click handler
	button.MouseButton1Click:Connect(function()
		toggleFakeLag(not fakeLagEnabled)
	end)
	
end;
task.spawn(C_2f);
-- StarterGui.ScreenGui.Fanta.misTab.fov.LocalScript
local function C_37()
local script = G2L["37"];
	-- Variables
	local camera = game.Workspace.CurrentCamera
	local masterButton = script.Parent -- Assuming the script is inside the button
	local slider = masterButton:FindFirstChild("slider") -- The main slider frame
	local sliderKnob = slider:FindFirstChild("sliderKnob") -- The knob
	local sliderValue = sliderKnob:FindFirstChild("sliderValue") -- The TextLabel inside the knob
	
	local minValue = 1 -- Minimum FOV value
	local maxValue = 120 -- Maximum FOV value
	local defaultFOV = 70 -- Default FOV
	local sliderEnabled = false -- Master switch state
	local runService = game:GetService("RunService")
	local lockedFOV = defaultFOV -- Stores the locked FOV value
	local renderStepConnection -- To manage the RenderStepped connection
	
	local userInputService = game:GetService("UserInputService")
	local dragging = false
	local menuDraggingEnabled = true -- A flag to control if menu dragging is allowed
	
	-- Update the camera's FOV based on the slider's position
	local function updateFOV(position)
		local sliderWidth = slider.AbsoluteSize.X
		local normalizedPosition = math.clamp(position / sliderWidth, 0, 1)
		lockedFOV = math.floor(minValue + (maxValue - minValue) * normalizedPosition)
	
		-- Update the slider value text
		sliderValue.Text = tostring(lockedFOV)
		sliderValue.Position = UDim2.new(0.5, -sliderValue.TextBounds.X / 2, -1, 0)
	end
	
	-- Start or stop locking the FOV
	local function toggleFOVLock(enabled)
		if enabled then
			-- Start locking the FOV
			renderStepConnection = runService.RenderStepped:Connect(function()
				camera.FieldOfView = lockedFOV
			end)
		else
			-- Stop locking the FOV
			if renderStepConnection then
				renderStepConnection:Disconnect()
				renderStepConnection = nil
			end
		end
	end
	
	-- Handle the initial drag to move the slider knob
	sliderKnob.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			menuDraggingEnabled = false -- Disable menu dragging when interacting with the slider
			masterButton.Parent.Draggable = false -- Prevent dragging the parent menu
		end
	end)
	
	userInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
			menuDraggingEnabled = true -- Re-enable menu dragging when slider dragging ends
			masterButton.Parent.Draggable = true -- Allow the menu to be draggable again
		end
	end)
	
	userInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local mousePos = input.Position.X
			local sliderPos = slider.AbsolutePosition.X
			local sliderWidth = slider.AbsoluteSize.X
			local relativePos = math.clamp(mousePos - sliderPos, 0, sliderWidth)
	
			sliderKnob.Position = UDim2.new(0, relativePos, 0, 0) -- Fix Y to 0
			updateFOV(relativePos)
		end
	end)
	
	-- Toggle slider functionality
	masterButton.MouseButton1Click:Connect(function()
		sliderEnabled = not sliderEnabled
		if sliderEnabled then
			masterButton.BackgroundColor3 = Color3.fromRGB(158,101,5,255) -- Green when active
			toggleFOVLock(true)
		else
			masterButton.BackgroundColor3 = Color3.fromRGB(4,60,42,255) -- Gray when inactive
			camera.FieldOfView = defaultFOV -- Reset FOV when disabled
			toggleFOVLock(false)
		end
	end)
	
	-- Initialize the default state
	sliderKnob.Position = UDim2.new(0.5, 0, 0, 0) -- Set knob to default position
	sliderValue.Text = tostring(defaultFOV)
	camera.FieldOfView = defaultFOV
	
end;
task.spawn(C_37);
-- StarterGui.ScreenGui.Fanta.misTab.noclip.LocalScript
local function C_3b()
local script = G2L["3b"];
	local masterButton = script.Parent -- Assuming the script is inside the toggle button
	local activeColor = Color3.fromRGB(158,101,5,255) -- Color when active (on)
	local inactiveColor = Color3.fromRGB(4,60,42,255) -- Color when inactive (off)
	local isNoClipActive = false -- Tracks whether NoClip is active
	
	local Noclip = nil
	local Clip = nil
	
	-- Function to enable NoClip
	local function noclip()
		Clip = false
		local function Nocl()
			if Clip == false and game.Players.LocalPlayer.Character ~= nil then
				for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if v:IsA('BasePart') and v.CanCollide then
						v.CanCollide = false
					end
				end
			end
			wait(0.21) -- Optimization
		end
		Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
	end
	
	-- Function to disable NoClip
	local function clip()
		if Noclip then Noclip:Disconnect() end
		Clip = true
	end
	
	-- Button click handler
	masterButton.MouseButton1Click:Connect(function()
		isNoClipActive = not isNoClipActive
		if isNoClipActive then
			noclip() -- Enable NoClip
			masterButton.BackgroundColor3 = activeColor -- Set button to active color
		else
			clip() -- Disable NoClip
			masterButton.BackgroundColor3 = inactiveColor -- Set button to inactive color
		end
	end)
	
end;
task.spawn(C_3b);
-- StarterGui.ScreenGui.Fanta.misTab.rpg.LocalScript
local function C_3e()
local script = G2L["3e"];
	local Button = script.Parent -- Assuming this script is inside your button
	
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local TweenService = game:GetService("TweenService")
	
	local CurrentCamera = workspace.CurrentCamera
	local Debris = workspace.Debris
	local VParts = Debris.VParts
	
	local LocalPlayer = Players.LocalPlayer
	local Forward = 0
	local Sideways = 0
	local RocketSpeed = 300
	local Break = false
	local Active = false -- Toggle state
	
	local function ToggleScript()
		Active = not Active
	
		if Active then
			Button.BackgroundColor3 = Color3.fromRGB(158,101,5,255) -- Green when active
		else
			Button.BackgroundColor3 = Color3.fromRGB(4,60,42,255) -- Red when inactive
		end
	end
	
	Button.MouseButton1Click:Connect(ToggleScript)
	
	VParts.ChildAdded:Connect(function(RPG_Rocket)
		if not Active or not LocalPlayer.Character:FindFirstChild("RPG-7") then
			return
		end
	
		task.wait()
	
		if RPG_Rocket.Name == "RPG_Rocket" then
			CurrentCamera.CameraSubject = RPG_Rocket
			LocalPlayer.Character.HumanoidRootPart.Anchored = true
	
			pcall(function()
				RPG_Rocket.BodyForce:Destroy()
				RPG_Rocket.RotPart.BodyAngularVelocity:Destroy()
				RPG_Rocket.Sound:Destroy()
			end)
	
			local BV = Instance.new("BodyVelocity", RPG_Rocket)
			BV.MaxForce = Vector3.new(1e9, 1e9, 1e9)
			BV.Velocity = Vector3.new()
	
			local BG = Instance.new("BodyGyro", RPG_Rocket)
			BG.P = 9e4
			BG.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
	
			task.spawn(function()
				while Active do
					RunService.RenderStepped:Wait()
	
					TweenService:Create(BV, TweenInfo.new(0.2), {
						Velocity = ((CurrentCamera.CFrame.LookVector * Forward) + 
							(CurrentCamera.CFrame.RightVector * Sideways)) * RocketSpeed
					}):Play()
	
					BG.CFrame = CurrentCamera.CoordinateFrame
					workspace.CurrentCamera.CFrame = RPG_Rocket.CFrame * CFrame.new(Vector3.new(0, 1, 1))
	
					if Break then
						Break = false
						break
					end
				end
	
				CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
				LocalPlayer.Character.HumanoidRootPart.Anchored = false
			end)    
	
			UserInputService.InputBegan:Connect(function(Key)
				if Key.KeyCode == Enum.KeyCode.W then
					Forward = 1
				elseif Key.KeyCode == Enum.KeyCode.S then
					Forward = -1
				elseif Key.KeyCode == Enum.KeyCode.D then
					Sideways = 1
				elseif Key.KeyCode == Enum.KeyCode.A then
					Sideways = -1
				end
			end)
	
			UserInputService.InputEnded:Connect(function(Key)
				if Key.KeyCode == Enum.KeyCode.W or Key.KeyCode == Enum.KeyCode.S then
					Forward = 0
				elseif Key.KeyCode == Enum.KeyCode.D or Key.KeyCode == Enum.KeyCode.A then
					Sideways = 0
				end
			end)
		end
	end)
	
	Debris.ChildAdded:Connect(function(A)
		task.wait()
		pcall(function()
			Break = ((A.Name == "RPG_Explosion_Long" or A.Name == "RPG_Explosion_Short"))
		end)
	end)
	
end;
task.spawn(C_3e);
-- StarterGui.ScreenGui.Fanta.misTab.admin.LocalScript
local function C_40()
local script = G2L["40"];
	local masterButton = script.Parent -- Assuming the script is inside the toggle button
	local activeColor = Color3.fromRGB(158,101,5,255) -- Color when active (on)
	local inactiveColor = Color3.fromRGB(4,60,42,255) -- Color when inactive (off)
	local isProtectionActive = false -- Tracks whether admin protection is active
	
	-- Blacklist of admin usernames
	local blacklist = {
		"tabootvcat", "Revenantic", "Saabor", "MoIitor", "IAmUnderAMask", "SheriffGorji", 
		"xXFireyScorpionXx", "LoChips", "DeliverCreations", "TDXiswinning", "TZZV", "FelixVenue", 
		"SIEGFRlED", "ARRYvvv", "z_papermoon", "Malpheasance", "ModHandIer", "valphex", 
		"J_anday", "tvdisko", "yIlehs", "DeliverCreations", "COLOSSUSBUILTOFSTEEL", "SeizedHolder", 
		"r3shape", "RVVZ", "adurize", "codedcosmetics", "QuantumCaterpillar", "FractalHarmonics", 
		"GalacticSculptor", "oTheSilver", "Kretacaous", "icarus_xs1goliath", "GlamorousDradon", 
		"rainjeremy", "parachuter2000", "faintermercury", "harht", "Sansek1252", "Snorpuwu", 
		"BenAzoten", "Cand1ebox", "KeenlyAware", "mrzued", "BruhmanVIII", "Nystesia", "fausties", 
		"zateopp", "Iordnabi", "ReviveTheDevil", "jake_jpeg", "UncrossedMeat3888", "realpenyy", 
		"karateeeh", "JayyMlg", "Lo_Chips", "Avelosky", "king_ab09", "TigerLe123", "Dalvanuis", 
		"MoIitor", "FelixVenue", "iSonMillions"
	}
	
	-- Convert blacklist to lowercase for consistent comparison
	for i = 1, #blacklist do
		blacklist[i] = string.lower(blacklist[i])
	end
	
	-- Function to check if a player's name is in the blacklist
	local function checkPlayer(player)
		if table.find(blacklist, string.lower(player.Name)) then
			game.Players.LocalPlayer:Kick("Admin joined the server, RUN FOR IT - Fanta")
		end
	end
	
	-- Function to check all players currently in the server
	local function checkAllPlayers()
		for _, player in ipairs(game.Players:GetPlayers()) do
			checkPlayer(player)
		end
	end
	
	-- Connect PlayerAdded event to check new players if protection is active
	local function toggleProtection(state)
		if state then
			-- Activate admin protection
			checkAllPlayers() -- Initial check for players already in the game
			game.Players.PlayerAdded:Connect(checkPlayer) -- Listen for new players joining
		else
			-- Deactivate admin protection
			game.Players.PlayerAdded:Disconnect(checkPlayer) -- Stop listening for new players
		end
	end
	
	-- Button click handler
	masterButton.MouseButton1Click:Connect(function()
		isProtectionActive = not isProtectionActive
		if isProtectionActive then
			toggleProtection(true)
			masterButton.BackgroundColor3 = activeColor -- Set button to active color
		else
			toggleProtection(false)
			masterButton.BackgroundColor3 = inactiveColor -- Set button to inactive color
		end
	end)
	
end;
task.spawn(C_40);
-- StarterGui.ScreenGui.Fanta.misTab.ScrollingFrame.LocalScript
local function C_44()
local script = G2L["44"];
	local runService = game:GetService("RunService")
	local folderPath = "Fanta/cfgs"
	local scrollingFrame = script.Parent -- Reference to the ScrollingFrame
	local selectedCFG = nil -- Stores the currently selected CFG
	
	-- Ensure folders exist
	if not isfolder("Fanta") then
		makefolder("Fanta")
	end
	if not isfolder(folderPath) then
		makefolder(folderPath)
	end
	
	-- Function to update the list of CFGs
	local function updateCFGList()
		-- Clear existing buttons
		for _, child in pairs(scrollingFrame:GetChildren()) do
			if child:IsA("TextButton") then
				child:Destroy()
			end
		end
	
		-- Get the list of .fanta files
		local files = listfiles(folderPath)
	
		-- Create buttons for each file
		for _, filePath in pairs(files) do
			if filePath:match("%.fanta$") then
				local fileName = filePath:match("([^/]+)%.fanta$")
	
				local button = Instance.new("TextButton")
				button.Size = UDim2.new(1, 0, 0, 35) -- Increased size slightly
				button.BackgroundTransparency = 1 -- Make transparent
				button.TextColor3 = Color3.fromRGB(255, 255, 255) -- Default white
				button.TextSize = 20 -- Increased font size (+5)
				button.Text = fileName
				button.Font = Enum.Font.Ubuntu -- Set font to Ubuntu
				button.Parent = scrollingFrame
	
				-- Make button selectable
				button.MouseButton1Click:Connect(function()
					selectedCFG = fileName -- Store selected CFG name
	
					-- Reset all buttons' colors
					for _, otherButton in pairs(scrollingFrame:GetChildren()) do
						if otherButton:IsA("TextButton") then
							otherButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- Default white text
						end
					end
	
					button.TextColor3 = Color3.fromRGB(255, 165, 0) -- Highlight selected button in orange
				end)
			end
		end
	end
	
	-- Constantly update the list using RenderStepped
	runService.RenderStepped:Connect(updateCFGList)
	
	-- Function to return the selected CFG name
	local function getSelectedCFG()
		return selectedCFG
	end
	
	return getSelectedCFG
	
end;
task.spawn(C_44);
-- StarterGui.ScreenGui.Fanta.misTab.saveCFG.LocalScript
local function C_46()
local script = G2L["46"];
	local HttpService = game:GetService("HttpService")
	local folderPath = "Fanta/cfgs"
	local saveCFG = script.Parent -- Reference to the Save button
	local nameCFG = script.Parent.Parent.nameCFG -- Reference to the nameCFG TextBox
	
	-- Ensure folders exist
	if not isfolder("Fanta") then
		makefolder("Fanta")
	end
	if not isfolder(folderPath) then
		makefolder(folderPath)
	end
	
	-- Function to collect all settings dynamically
	local function collectSettings()
		local settings = {}
	
		-- Example of dynamically collecting the settings from UI elements or variables
		settings.aimbotFOV = script.Parent.Parent.aimTab.aimbot.sliderFrame.sliderKnob.sliderValue.Text -- FOV value from the slider
		settings.chamsEnabled = script.Parent.Parent.visTab.chams.chamsEnabledCheckbox.Checked -- Checkbox for chams enabled/disabled
	
		-- Collect any other settings here by referencing their UI elements directly
		-- You can add more as needed, like toggles, values, etc.
		settings.autoBhop = script.Parent.Parent.aimTab.aimbot.autoBhopToggle.Checked  -- Example toggle for auto bhop
	
		-- Add any other dynamic settings to the table, e.g., player's preferences, configurations
	
		return settings
	end
	
	-- Save the settings when the save button is clicked
	saveCFG.MouseButton1Click:Connect(function()
		local cfgName = nameCFG.Text
	
		-- Prevent saving if no name is provided
		if cfgName == "" then
			print("Please enter a name for the configuration.")
			return
		end
	
		-- Collect settings dynamically
		local settings = collectSettings()
	
		-- Construct the full file path
		local fileName = cfgName .. ".fanta"
		local filePath = folderPath .. "/" .. fileName
	
		-- Convert settings to JSON and save (overwrite if file exists)
		local json = HttpService:JSONEncode(settings)
		writefile(filePath, json)
		print("Configuration saved as:", fileName)
	
		-- Refresh the file list
		refreshFileList()  -- Assuming this function updates the UI with new configurations
	end)
	
end;
task.spawn(C_46);
-- StarterGui.ScreenGui.Fanta.misTab.loadCFG.LocalScript
local function C_48()
local script = G2L["48"];
	local folderPath = "Fanta/cfgs"
	local getSelectedCFG = require(script.Parent.ScrollingFrameScript) -- Reference to the scrolling frame script
	
	local function loadCFG()
		local selectedCFG = getSelectedCFG()
	
		if selectedCFG then
			local filePath = folderPath .. "/" .. selectedCFG .. ".fanta"
	
			if isfile(filePath) then
				local data = readfile(filePath)
				local settings = game:GetService("HttpService"):JSONDecode(data)
	
				-- Apply settings (Example: Loading Chams)
				if settings.chamsEnabled ~= nil then
					_G.chamsEnabled = settings.chamsEnabled
				end
	
				print("Loaded CFG: " .. selectedCFG)
			else
				warn("Selected CFG file does not exist!")
			end
		else
			warn("No CFG selected!")
		end
	end
	
	script.Parent.MouseButton1Click:Connect(loadCFG)
	
end;
task.spawn(C_48);
-- StarterGui.ScreenGui.Fanta.misTab.nameCFG.LocalScript
local function C_4a()
local script = G2L["4a"];
	local nameCFG = script.Parent -- Reference to the TextBox
	
	-- Prevent spaces or special characters (only allow letters, numbers, and underscores)
	nameCFG:GetPropertyChangedSignal("Text"):Connect(function()
		nameCFG.Text = nameCFG.Text:gsub("[^%w_]", "") -- Remove invalid characters
	end)
	
end;
task.spawn(C_4a);
-- StarterGui.ScreenGui.Fanta.aimTab.aimbot.LocalScript
local function C_4e()
local script = G2L["4e"];
	-- UI Setup
	local aimbotButton = script.Parent
	local dropdownButton = aimbotButton:WaitForChild("dropdownButton")
	local dropdownFrame = dropdownButton:WaitForChild("dropdownMenu")
	local headButton = dropdownFrame:WaitForChild("HeadButton")
	local bodyButton = dropdownFrame:WaitForChild("BodyButton")
	
	-- Aimbot Configuration
	local activeColor = Color3.fromRGB(158,101,5,255)
	local inactiveColor = Color3.fromRGB(4,60,42,255)
	local isAimlockActive = false
	local AimlockTarget = nil
	local AimPart = "Head" -- Default part to aim at
	local TeamCheck = false
	local PredictMovement = true
	local PredictionVelocity = 10
	
	local Players = game:GetService("Players")
	local Uis = game:GetService("UserInputService")
	local RService = game:GetService("RunService")
	local Camera = workspace.CurrentCamera
	local Client = Players.LocalPlayer
	local Mouse = Client:GetMouse()
	
	-- Toggle dropdown visibility
	dropdownButton.MouseButton1Click:Connect(function()
		dropdownFrame.Visible = not dropdownFrame.Visible
	end)
	
	-- Function to select a target part and update dropdown button text
	local function selectTargetPart(part, partName)
		AimPart = part
		dropdownButton.Text = partName
		dropdownFrame.Visible = false
	end
	
	headButton.MouseButton1Click:Connect(function()
		selectTargetPart("Head", "Head")
	end)
	
	bodyButton.MouseButton1Click:Connect(function()
		selectTargetPart("HumanoidRootPart", "Body")
	end)
	
	-- Change button color based on active state
	local function setButtonColor(isActive)
		aimbotButton.BackgroundColor3 = isActive and activeColor or inactiveColor
	end
	
	-- Function to check if a position is on the screen
	local function isOnScreen(position)
		local viewportSize = Camera.ViewportSize
		return position.X >= 0 and position.X <= viewportSize.X and position.Y >= 0 and position.Y <= viewportSize.Y
	end
	
	-- Function to get the nearest target to the mouse cursor
	local function GetNearestTarget()
		local nearestPlayer = nil
		local closestDistance = math.huge
	
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= Client and player.Character and player.Character:FindFirstChild("Head") then
				local targetPart = player.Character:FindFirstChild(AimPart)
				if targetPart and (not TeamCheck or player.Team ~= Client.Team) then
					local screenPos, onScreen = Camera:WorldToScreenPoint(targetPart.Position)
					local mouseDistance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
	
					-- Check if the target is on the screen and find the closest one
					if onScreen and isOnScreen(Vector2.new(screenPos.X, screenPos.Y)) and mouseDistance < closestDistance then
						closestDistance = mouseDistance
						nearestPlayer = player
					end
				end
			end
		end
	
		return nearestPlayer
	end
	
	-- Aimbot toggle
	aimbotButton.MouseButton1Click:Connect(function()
		isAimlockActive = not isAimlockActive
		setButtonColor(isAimlockActive)
	end)
	
	-- Lock-on logic
	Uis.InputBegan:Connect(function(Key)
		if Key.UserInputType == Enum.UserInputType.MouseButton2 then
			if isAimlockActive and AimPart then
				AimlockTarget = GetNearestTarget()
			end
		end
	end)
	
	Uis.InputEnded:Connect(function(Key)
		if Key.UserInputType == Enum.UserInputType.MouseButton2 then
			AimlockTarget = nil
		end
	end)
	
	-- Update camera during aimbot
	RService.RenderStepped:Connect(function()
		if isAimlockActive and AimlockTarget and AimPart then
			local targetPart = AimlockTarget.Character:FindFirstChild(AimPart)
			if targetPart then
				local TargetPos = targetPart.Position
				if PredictMovement then
					Camera.CFrame = CFrame.new(Camera.CFrame.p, TargetPos + targetPart.Velocity / PredictionVelocity)
				else
					Camera.CFrame = CFrame.new(Camera.CFrame.p, TargetPos)
				end
			else
				AimlockTarget = GetNearestTarget()
			end
		end
	end)
	
end;
task.spawn(C_4e);
-- StarterGui.ScreenGui.LocalScript
local function C_58()
local script = G2L["58"];
	-- Variables
	local userInputService = game:GetService("UserInputService")
	local frame = script.Parent:WaitForChild("Fanta") -- Replace with your frame's name
	
	-- Initial state: frame is hidden
	frame.Visible = true
	
	-- Function to toggle frame visibility
	local function toggleFrame()
		frame.Visible = not frame.Visible
	end
	
	-- Listen for the INSERT key press
	userInputService.InputBegan:Connect(function(input, gameProcessed)
		-- Check if the input is the INSERT key and it's not being processed by other parts of the game
		if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
			if input.KeyCode == Enum.KeyCode.Insert then
				toggleFrame() -- Toggle the frame when INSERT is pressed
			end
		end
	end)
	
end;
task.spawn(C_58);
-- StarterGui.ScreenGui.LocalScript
local function C_59()
local script = G2L["59"];
	local screenGui = script.Parent
	screenGui.ResetOnSpawn = false
	
end;
task.spawn(C_59);

return G2L["1"], require;
